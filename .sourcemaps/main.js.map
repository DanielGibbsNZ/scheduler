{"version":3,"sources":["../../src/state/root.ts","../../src/scheduling/rule_based/rules.ts","../../src/scheduling/rule_based/scheduler.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/about/about.ts","../../src/pages/home/home.ts","../../src/scheduling/common.ts","../../src/state/scheduling-types.ts","../../src/pages/people/people.ts","../../src/components/reasons/reasons.ts","../../src/state/people.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/state/UIState.ts","../../src/providers/store/test.store.ts","../../src/components/components.module.ts","../../src/components/schedule-viewer/schedule-viewer.ts","../../src/components/person-editor/person-editor.ts","../../src/state/roles.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {PeopleStore} from \"./people\";\nimport {RolesStore} from \"./roles\";\nimport {UIStore} from \"./UIState\";\nimport {Injectable} from \"@angular/core\";\nimport {TestStoreConstruction} from \"../providers/store/test.store\";\nimport {autorunAsync, IReactionDisposer} from \"mobx\";\nimport {ScheduleInput} from \"../scheduling/common\";\nimport {ScheduleWithRules} from \"../scheduling/rule_based/scheduler\";\n\n@Injectable()\nclass RootStore {\n    people_store: PeopleStore;\n    roles_store: RolesStore;\n    ui_store: UIStore;\n\n    private schedule: ScheduleWithRules;\n    private regenerator: IReactionDisposer;\n\n    constructor() {\n        this.people_store = new PeopleStore();\n        this.roles_store = new RolesStore();\n        this.ui_store = new UIStore();\n\n        TestStoreConstruction.SetupStore(this);\n\n        this.regenerator = autorunAsync(() => {\n            console.log(\"Generate schedule...\");\n            this.generate_schedule();\n\n            // this.schedule.dates.forEach(sc => {\n            //     console.log(\"\" + sc);\n            // });\n        });\n    }\n\n    generate_schedule(): ScheduleWithRules {\n        // for testing, create some fake\n        let params = new ScheduleInput(this.people_store, this.roles_store);\n        params.start_date = new Date(2018, 0, 7);\n        params.end_date = new Date(2018, 4, 1);\n\n        if (!this.schedule) {\n            this.schedule = new ScheduleWithRules(params);\n        }\n        this.schedule.create_schedule();\n        return this.schedule;\n    }\n}\n\nexport {RootStore}\n\n\n// WEBPACK FOOTER //\n// ./src/state/root.ts","import * as _ from 'lodash';\nimport {Role, RolesStore} from \"../../state/roles\";\nimport {PeopleStore, Person, Unavailablity} from \"../../state/people\";\nimport {Exclusion, ScheduleAtDate} from \"../common\";\n\nclass RuleExecution {\n    object: any;\n    trigger: Rule;\n\n    constructor(obj, trigger: Rule) {\n        this.object = obj;\n        this.trigger = trigger;\n    }\n\n    get empty(): boolean {\n        return this.object == null && this.trigger == null;\n    }\n\n    public static EMPTY() {\n        return new RuleExecution(null, null);\n    }\n}\n\nclass RuleFacts {\n    current_date: Date;\n    current_person: Person;\n    decisions_for_date: Array<string>;\n\n    private all_pick_rules: Map<Role, Array<Rule>>;\n    private all_role_rules: Map<Person, Array<Rule>>;\n\n    private exclusion_zones: Map<Person, Array<Exclusion>>;\n    private people: PeopleStore;\n    private roles: RolesStore;\n\n    private usage_counts: Map<Role, Map<Person, number>>;\n\n    // This is the schedule, as it's being built\n    private dates: Map<string, ScheduleAtDate>;\n    private follow_on_actions: Array<Rule>;\n\n    constructor(people: PeopleStore, roles: RolesStore) {\n        this.people = people;\n        this.roles = roles;\n        this.begin();\n    }\n\n    get schedule_dates(): Array<ScheduleAtDate> {\n        return Array.from(this.dates.values());\n    }\n\n    get_schedule_for_date(date: Date) {\n        let dateAtHour = Unavailablity.dayAndHourForDate(date);\n        let schedule = this.dates.get(dateAtHour);\n        if (schedule == null) {\n            console.log(\"Create new schedule for \" + dateAtHour);\n            schedule = new ScheduleAtDate(date);\n            this.dates.set(dateAtHour, schedule);\n            return schedule;\n        } else {\n            // console.log(\"Reuse schedule for \" + dateAtHour + \" = \" + date);\n            return schedule;\n        }\n    }\n\n    begin() {\n        // This is all PickRules, for all roles\n        this.all_pick_rules = this.roles.pick_rules(this.people);\n        // this.logPickRules();\n\n        this.all_role_rules = this.roles.role_rules(this.people);\n        this.exclusion_zones = new Map<Person, Array<Exclusion>>();\n\n        this.usage_counts = new Map<Role, Map<Person, number>>();\n        this.dates = new Map<string, ScheduleAtDate>();\n        this.follow_on_actions = [];\n    }\n\n    // private logPickRules() {\n    //     console.log(\"Pick rules:\");\n    //     this.all_pick_rules.forEach((list, role) => {\n    //         console.log(\" - \" + role.name);\n    //         list.forEach(r => {\n    //             console.log(\" --- \" + r.constructor.name + \" = \" + JSON.stringify(r));\n    //         })\n    //     });\n    // }\n\n    begin_new_role_group(role_group: Array<Role>) {\n    }\n\n    begin_new_role(date: Date) {\n        this.current_date = date;\n        this.decisions_for_date = [];\n    }\n\n    add_decision(text: string, log: boolean = true) {\n        if (!text) {\n            return;\n        }\n        if (log) {\n            console.log(text);\n        }\n        this.decisions_for_date.push(text);\n    }\n\n    has_exclusion_for(date: Date, person: Person, role: Role): any[] {\n        // Is this person unavailable on this date?\n        if (person.is_unavailable_on(date)) {\n            return [true, \"unavailable\"];\n        }\n\n        // Is this person excluded for this date?\n        let exclusions_for_person = this.exclusion_zones.get(person);\n        if (!exclusions_for_person) {\n            return [false, \"no exclusions for \" + person.name];\n        }\n\n        // Does the exclusion zone for this person overlap with any existing?\n        let availability = person.prefs.availability;\n        let end_date = availability.get_end_date_from(date);\n        let new_exclusion = new Exclusion(date, end_date, role);\n\n        for (let exclusion of exclusions_for_person) {\n            if (exclusion.overlap_with(new_exclusion, role)) {\n                return [true, \"overlap with existing \" + exclusion];\n            }\n        }\n        return [false, \"clear!\"];\n    }\n\n    get_next_suitable_person_for(role: Role): Person {\n        // runs the pick rules for this role\n        let pick_rules = this.all_pick_rules.get(role);\n        if (!pick_rules) {\n            return null;\n        }\n        for (let rule of pick_rules) {\n            // console.log(\"Using rule \" + rule.constructor.name + \", \" + JSON.stringify(rule) + \" next...\");\n            if (rule instanceof OnThisDate) {\n                let result = rule.execute(this);\n                if (result) return result;\n            }\n            if (rule instanceof UsageWeightedSequential) {\n                let people = rule.execute(this, role);\n                if (people.length) {\n                    for (let possible_person of people) {\n                        // can't already be in the role on this date\n                        let [has_exclusion, reason] = this.has_exclusion_for(this.current_date, possible_person, role);\n                        if (has_exclusion) {\n\n                            this.add_decision(possible_person.name + \" cant do it, they have an exclusion: \" + reason);\n                            continue;\n                        }\n\n                        return possible_person;\n                    }\n\n                }\n\n                return null;\n            }\n        }\n    }\n\n    get_next_suitable_role_for_person(person: Person) {\n        let role_rules = this.all_role_rules.get(person);\n        if (!role_rules) {\n            return null;\n        }\n        for (let rule of role_rules) {\n            if (rule instanceof FixedRoleOnDate) {\n                let result = rule.execute(this);\n                if (result) return result;\n            }\n            if (rule instanceof WeightedRoles) {\n                let result = rule.execute(this, person);\n                return result[0];\n            }\n        }\n        return null;\n    }\n\n    private get_person_count_for_role(role: Role, person: Person): Map<Person, number> {\n        if (role == null\n        ) {\n            throw new Error(\"Role cannot be null here\");\n        }\n        if (person == null) {\n            throw new Error(\"Person cannot be null here\");\n        }\n        if (!this.usage_counts.has(role)) {\n            console.log(\"Creating new role counter for \" + role.name);\n            let new_count = new Map<Person, number>();\n            this.usage_counts.set(role, new_count);\n        }\n\n        let by_person = this.usage_counts.get(role);\n        if (!by_person.has(person)) {\n            console.log(\"Starting count at 0 for \" + person.name);\n            by_person.set(person, 0);\n        }\n        return by_person;\n    }\n\n    number_of_times_role_used_by_person(role: Role, person: Person): number {\n        if (role == null) {\n            throw new Error(\"Role cannot be null here\");\n        }\n        if (person == null) {\n            throw new Error(\"Person cannot be null here\");\n        }\n        return this.get_person_count_for_role(role, person).get(person);\n    }\n\n    total_number_of_times_person_placed_in_roles(person: Person, roles: Array<Role>): number {\n        let total = 0;\n        for (let role of roles) {\n            let person_counter_for_role = this.get_person_count_for_role(role, person);\n            total = total + person_counter_for_role.get(person);\n        }\n        return total;\n    }\n\n    index_of_person_in_role_group(person: Person, role: Role) {\n        return 0;\n    }\n\n    use_this_person_in_role(person: Person, role: Role) {\n        let person_counter = this.get_person_count_for_role(role, person);\n        let current_count = person_counter.get(person);\n        person_counter.set(person, (current_count + 1));\n        // console.log(\"Up to \" + person_counter.get(person));\n    }\n\n    add_exclusion_for(person: Person, role: Role, date: Date) {\n        let exclusions_for_person = this.exclusion_zones.get(person);\n        if (!exclusions_for_person) {\n            exclusions_for_person = [];\n        }\n\n        // make the exclusion\n        let availability = person.prefs.availability;\n        let end_date = availability.get_end_date_from(date);\n\n        let exclusion = new Exclusion(date, end_date, role);\n        exclusions_for_person.push(exclusion);\n        this.add_decision(\"Recorded exclusion for \" + person.name + \", \" + role.name + \" for \" + exclusion.duration_in_days + \" days\");\n        this.exclusion_zones.set(person, exclusions_for_person);\n    }\n\n    is_person_in_exclusion_zone(person: Person, role: Role, date_for_row: Date) {\n        let exclusion_zones = this.exclusion_zones.get(person);\n        if (!exclusion_zones) {\n            return false;\n        }\n\n        // lets find those zones relating directly to this role\n        let zones_matching_role = exclusion_zones.filter(z => z.role.uuid == role.uuid);\n        if (!zones_matching_role.length) {\n            return false;\n        }\n\n        let containining_this_date = zones_matching_role.filter(z => z.includes_date(date_for_row));\n        return containining_this_date.length > 0;\n    }\n\n    place_person_in_role(person: Person, role: Role, date: Date, record_usage_stats = true) {\n        this.current_person = person;\n\n        this.add_exclusion_for(person, role, date);\n\n        let specific_day = this.get_schedule_for_date(date);\n        specific_day.add_person(person, role, this);\n        this.add_decision(\"Placing \" + person.name + \" into \" + role);\n\n        if (record_usage_stats) {\n            this.use_this_person_in_role(person, role);\n        }\n\n        this.follow_on_actions = this.follow_on_actions.concat(this.placement_consequences(person, role));\n    }\n\n    private placement_consequences(person: Person, role: Role): Array<Rule> {\n        // Find out what placement rules this person has\n        return person.placement_rules_for_role(role);\n    }\n\n    drain_follow_ons(person: Person, role: Role) {\n        // these actions are for THIS person and role\n        while(this.follow_on_actions.length) {\n            let next = this.follow_on_actions.pop();\n\n            if(next instanceof DependentPlacementRule) {\n                next.execute(this, role)\n            }\n        }\n    }\n\n    end_role() {\n        this.decisions_for_date = [];\n    }\n}\n\nclass Rule {\n    priority: number;\n\n    constructor(priority: number = 0) {\n        this.priority = priority;\n    }\n}\n\nclass FixedRoleOnDate extends Rule {\n    date: Date;\n    role: Role;\n\n    constructor(date: Date, r: Role, priority = 0) {\n        super(priority);\n        this.date = date;\n        this.role = r;\n    }\n\n    execute(state: RuleFacts): Role {\n        if (this.date == state.current_date) {\n            return this.role;\n        }\n        return null;\n    }\n}\n\nclass WeightedRoles extends Rule {\n    weightedRoles: Map<Role, number>;\n\n    constructor(weightedRules: Map<Role, number>) {\n        super();\n        this.weightedRoles = weightedRules;\n        this.normalize_weights();\n    }\n\n    get roles_sorted_by_weight(): Array<Role> {\n        return _.sortBy(Array.from(this.weightedRoles.keys()), (o) => {\n            return this.weightedRoles.get(o);\n        });\n    }\n\n    execute(state: RuleFacts, person: Person): Array<Role> {\n        // sort by current score, highest first.\n        let roles_in_weight_order = this.roles_sorted_by_weight;\n\n        let roles = Array.from(this.weightedRoles.keys());\n        let total_usages = state.total_number_of_times_person_placed_in_roles(person, roles);\n        if (total_usages == 0) {\n            return roles_in_weight_order;\n        }\n\n        // Sort based on realtime score\n        return _.sortBy(roles_in_weight_order, role => {\n            let role_weighting = this.weightedRoles.get(role);\n\n            let current_score = state.number_of_times_role_used_by_person(role, person);\n            let runtime_weighting = current_score / total_usages;\n            // console.log(role.name + \", weight: \" + role_weighting + \". Has score: \" + current_score + \". Runtime weight: \" + runtime_weighting);\n\n            if (runtime_weighting < role_weighting) {\n                return -1;\n            } else if (runtime_weighting > role_weighting) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    private normalize_weights() {\n        let total_weight: number = _.sum(Array.from(this.weightedRoles.values()));\n        // console.log(\"Total weights: \" + total_weight);\n        this.weightedRoles.forEach((num, key) => {\n            this.weightedRoles.set(key, num / total_weight);\n        });\n    }\n}\n\nclass OnThisDate extends Rule {\n    role: Role;\n    date: Date;\n    person: Person;\n\n    constructor(date: Date, person: Person, role: Role, priority: number = 0) {\n        super(priority);\n        this.date = date;\n        this.role = role;\n        this.person = person;\n    }\n\n    execute(state: RuleFacts): Person {\n        let hasPrimaryRole = this.person.has_primary_role(this.role);\n        if (state.current_date == this.date && hasPrimaryRole) {\n            return this.person;\n        }\n        return null;\n    }\n}\n\nclass UsageWeightedSequential extends Rule {\n    private usages: Map<Person, number>;\n    private original_index: Map<Person, number>;\n\n    constructor(people: Array<Person>, priority: number = 0) {\n        super(priority);\n        this.usages = new Map<Person, number>();\n        this.original_index = new Map<Person, number>();\n\n        people.forEach((p, index) => {\n            this.usages.set(p, 0);\n            this.original_index.set(p, index);\n        });\n    }\n\n    execute(state: RuleFacts, role: Role): Array<Person> {\n        // Sort by number\n        return Array.from(this.usages.keys()).sort((p1: Person, p2: Person) => {\n            let usageForP1 = state.number_of_times_role_used_by_person(role, p1);\n            let usageForP2 = state.number_of_times_role_used_by_person(role, p2);\n            if (usageForP1 < usageForP2) {\n                return -1;\n            } else if (usageForP1 > usageForP2) {\n                return 1;\n            }\n\n            // Compare by index\n            let p1Index = state.index_of_person_in_role_group(p1, role);\n            let p2Index = state.index_of_person_in_role_group(p2, role);\n            if (p1Index < p2Index) {\n                return -1;\n            } else if (p1Index > p2Index) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n}\n\nclass TogetherPlacementRule extends Rule {\n    private role: Role;\n    private also_place: Person;\n    private into_role: Role;\n\n    constructor(role: Role, also_place: Person, into_role: Role) {\n        super();\n        this.role = role;\n        this.also_place = also_place;\n        this.into_role = into_role;\n    }\n\n    execute(state: RuleFacts, role: Role) {\n        if (role.uuid == this.role.uuid) {\n            state.place_person_in_role(this.also_place, this.into_role, state.current_date);\n        }\n    }\n}\n\nclass DependentPlacementRule extends Rule {\n    additional_roles: Array<Role>;\n\n    constructor(additional_roles: Array<Role>) {\n        super();\n        this.additional_roles = additional_roles;\n    }\n\n    execute(state: RuleFacts, role: Role) {\n        for (let role of this.additional_roles) {\n            state.place_person_in_role(state.current_person, role, state.current_date);\n        }\n    }\n}\n\nexport {\n    UsageWeightedSequential,\n    WeightedRoles,\n    FixedRoleOnDate,\n    RuleFacts,\n    OnThisDate,\n    DependentPlacementRule,\n    TogetherPlacementRule,\n    Rule\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/rule_based/rules.ts","import {ScheduleAtDate, ScheduleInput} from \"../common\";\nimport {Role} from \"../../state/roles\";\nimport {RuleFacts} from \"./rules\";\nimport {Person} from \"../../state/people\";\nimport * as _ from 'lodash';\n\nclass ScheduleWithRules {\n    params: ScheduleInput;\n    facts: RuleFacts;\n\n    constructor(input: ScheduleInput) {\n        this.params = input;\n        this.params.validate();\n    }\n\n    get dates(): Array<ScheduleAtDate> {\n        return this.facts.schedule_dates;\n    }\n\n    create_schedule() {\n        this.clear_working_state();\n\n        console.log(\"Working from \" + this.params.start_date + \" to: \" + this.params.end_date);\n        let schedule_duration = this.params.schedule_duration_in_days;\n        console.log(\"Schedule is \" + schedule_duration + \" days long\");\n\n        let role_store = this.params.roles;\n        let role_groups = role_store.roles_in_layout_order_grouped;\n        let role_names = role_groups.map(g => JSON.stringify(g.map(r => r.name)));\n        console.log(\"Roles (in order of importance): \" + JSON.stringify(role_names));\n\n        this.facts.begin();\n        role_groups.forEach(rg => this.process_role_group(rg));\n    }\n\n    process_role_group(role_group: Array<Role>) {\n        this.facts.begin_new_role_group(role_group);\n\n        let current_date = this.params.start_date;\n        console.log(\"\\r\\nNext group: \" + JSON.stringify(role_group.map(r => r.name)));\n\n        // Iterate through all dates\n        let iterations = 0;\n\n        while (current_date.valueOf() < this.params.end_date.valueOf()) {\n            console.log(\"Next date: \" + current_date);\n\n            for (let role of role_group) {\n                this.facts.begin_new_role(current_date);\n                this.process_role(current_date, role, role_group);\n            }\n\n            // Move to the next date\n            current_date = this.choose_next_schedule_date(current_date);\n\n            // This is taking 10,000 reasons too far!\n            iterations++;\n            if (iterations > 10000) {\n                console.error(\"Max iterations - bug!?\");\n                break\n            }\n\n        }\n    }\n\n    is_role_filled_for_date(role: Role, date: Date) {\n        let specific_day = this.facts.get_schedule_for_date(date);\n        let peopleInRole = specific_day.people_in_role(role);\n        return peopleInRole.length >= role.maximum_count;\n\n    }\n\n    process_role(current_date: Date, role: Role, role_group: Array<Role>) {\n        let specific_day = this.facts.get_schedule_for_date(current_date);\n\n        // If already at max for this role, ignore it.\n        if (this.is_role_filled_for_date(role, current_date)) {\n            console.log(\"Not processing \" + role.name + \", already have \" + role.maximum_count + \" slotted in\");\n            return;\n        }\n\n        // For this date, try to layout all people\n        let people_for_this_role = this.params.people.people_with_role(role);\n\n        // Setup our available people (which at the beginning, is 'everyone')\n        if (people_for_this_role.length == 0) {\n            // console.log(\"Laying out role: \" + role.name + \" ... skipping (no one to do it)\");\n            return;\n        }\n\n        this.facts.add_decision(\"Role: \" + role.name, false);\n\n        let iteration_max = people_for_this_role.length;\n        while (iteration_max > 0) {\n            iteration_max--;\n\n            let next_suitable_person = this.facts.get_next_suitable_person_for(role);\n            if (next_suitable_person == null) {\n                this.facts.add_decision(\"No people suitable for role \" + role.name);\n                break;\n            }\n\n            let message = \"Can \" + next_suitable_person.name + \" do role \" + role.name + \"?\";\n            this.facts.add_decision(message);\n\n            if (_.includes(specific_day.people_in_role(role), next_suitable_person)) {\n                let message = \"Skipping \" + next_suitable_person.name + \", they are already on it\";\n                // TODO: Fix? this is a hack to make sure we don't infinite loop. If we get here, looping would bring us right back unless we change engine state\n                this.facts.use_this_person_in_role(next_suitable_person, role);\n                this.facts.add_decision(message);\n                continue;\n            }\n\n            let next_wanted_role_for_person = this.facts.get_next_suitable_role_for_person(next_suitable_person);\n\n            // Only let this happen if the role is withing the current group being processed\n            // TODO: This could be optional (might not want role_groups being mutually exclusive like this)\n            if (_.includes(role_group, next_wanted_role_for_person) && !this.is_role_filled_for_date(next_wanted_role_for_person, current_date)) {\n                if (next_wanted_role_for_person.uuid != role.uuid) {\n                    this.facts.add_decision(\"Putting \" + next_suitable_person.name + \" into \" + next_wanted_role_for_person + \" instead of \" + role + \" due to a role weighting\");\n\n                    this.facts.place_person_in_role(next_suitable_person, next_wanted_role_for_person, current_date);\n\n                    this.facts.add_decision(\"Check role \" + role + \" again because of weighted placement\");\n                    this.facts.drain_follow_ons(next_suitable_person, next_wanted_role_for_person);\n\n                    // now continue with the loop, because we still havn't found someone for the role we were originally looking for.\n                    continue;\n                }\n            }\n\n            // OK. So. Turns out the role is the same.\n            // Place the person, and we're done filling this role.\n            this.facts.place_person_in_role(next_suitable_person, role, current_date);\n            this.facts.drain_follow_ons(next_suitable_person, role);\n\n            this.facts.end_role();\n\n            let peopleInRole = specific_day.people_in_role(role);\n            if (peopleInRole.length >= role.maximum_count) {\n                this.facts.add_decision(\"Done with \" + role.name + \", have \" + role.maximum_count + \" slotted in\");\n                return;\n            }\n        }\n    }\n\n    private choose_next_schedule_date(date: Date): Date {\n        let next_date = new Date(date);\n        // console.log(\"Moving from date ... : \" + next_date);\n        next_date.setDate(date.getDate() + this.params.days_per_period);\n        // console.log(\".... to date ... : \" + next_date);\n        return next_date;\n    }\n\n    private clear_working_state() {\n        this.facts = new RuleFacts(this.params.people, this.params.roles);\n    }\n\n    jsonResult(minimized: boolean = false) {\n        // An array of dictionaries\n        // Each dict is ordered keys, being in order of the role\n\n        // These 'people' end up being our roles.\n        // Thing is, we want to know ALL people, in order...\n        // So I think - lets do this for ALL roles first\n        let ordered_roles = this.params.roles.roles_in_layout_order;\n        let dates = this.facts.schedule_dates;\n\n        let rows = [];\n        for (let schedule_for_day of dates) {\n            // We create a dict, in order, for EVERY key of ordered_roles\n            let rowDict = {};\n\n            rowDict['date'] = schedule_for_day.date;\n            rowDict['date_key'] = schedule_for_day.date_key;\n\n            // Look at each known role. Fill in the people fulfilling that role\n            for (let role of ordered_roles) {\n                // Do we have a value, for this?\n                rowDict[role.name] = schedule_for_day.people_in_role(role);\n            }\n\n            // Add the row\n            rows.push(rowDict);\n        }\n        return rows;\n    }\n\n    jsonFields() {\n        let ordered_roles = this.params.roles.roles_in_layout_order;\n        let field_names = ordered_roles.map(r => {\n            return r.name;\n        });\n        return [\n            \"date\",\n            ...field_names\n        ]\n    }\n\n    reasons_for(person: Person, date: Date, role: Role): Array<string> {\n        let specific_day = this.facts.get_schedule_for_date(date);\n        let score = specific_day.score_for(person);\n        if (score) {\n            return score.decisions;\n        }\n        return [];\n    }\n\n    is_person_in_exclusion_zone(person: Person, role: Role, date_for_row: Date) {\n        return this.facts.is_person_in_exclusion_zone(person, role, date_for_row);\n    }\n}\n\nexport {\n    ScheduleWithRules\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/rule_based/scheduler.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 122;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 122\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 163;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 163\n// module chunks = 0","import {Component} from '@angular/core';\n\nimport {AboutPage} from '../about/about';\nimport {HomePage} from '../home/home';\nimport {PeoplePage} from \"../people/people\";\n\n@Component({\n    templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n    tab1Root = HomePage;\n    tab2Root = PeoplePage;\n    tab3Root = AboutPage;\n\n    constructor() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import {Component} from '@angular/core';\nimport {NavController} from 'ionic-angular';\nimport {RootStore} from \"../../state/root\";\n\n@Component({\n    selector: 'page-home',\n    templateUrl: 'home.html'\n})\nexport class HomePage {\n\n    constructor(public navCtrl: NavController, private store: RootStore) {\n    }\n\n    clear_selection() {\n        this.store.ui_store.selected_person = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import {Role, RolesStore} from \"../state/roles\";\nimport {PeopleStore, Person, Unavailablity} from \"../state/people\";\nimport * as _ from 'lodash';\nimport {RuleFacts} from \"./rule_based/rules\";\n\nclass ScheduleScore {\n    roles: Array<Role>;\n    decisions: Array<string>;\n    score: number;\n\n    constructor(role: Role, decisions: Array<string> = []) {\n        this.roles = [role];\n        this.score = 0;\n        this.decisions = decisions;\n    }\n\n    has_role(role: Role) {\n        return _.includes(this.roles, role);\n    }\n\n    valueOf() {\n        return \"Score: \" + this.score + \" for role: \" + this.roles.join(\", \");\n    }\n\n    add_role(role: Role, facts: RuleFacts) {\n        this.roles.push(role);\n        this.decisions = this.decisions.concat(facts.decisions_for_date);\n    }\n}\n\nclass ScheduleInput {\n    start_date: Date;\n    end_date: Date;\n    days_per_period: number;\n\n    roles: RolesStore;\n    people: PeopleStore;\n\n    constructor(people: PeopleStore = new PeopleStore(), roles: RolesStore = new RolesStore()) {\n        this.days_per_period = 7;\n        this.people = people;\n        this.roles = roles;\n    }\n\n    validate() {\n        if (this.roles.roles_in_layout_order.length == 0) {\n            throw Error(\"The dates parameters don't define any roles.\");\n        }\n\n        if (this.days_per_period < 1) {\n            throw new Error(\"Period must be > 1\");\n        }\n\n        if (!this.start_date || isNaN(this.start_date.valueOf())) {\n            throw new Error(\"No start date, or start date is invalid\");\n        }\n        if (!this.end_date || isNaN(this.end_date.valueOf())) {\n            throw new Error(\"No end date, or end date is invalid\");\n        }\n\n        if (this.schedule_duration_in_days <= 0) {\n            throw new Error(\"The dates has no sensible length (0 or -ve)\");\n        }\n    }\n\n    get schedule_duration_in_days(): number {\n        return daysBetween(this.start_date, this.end_date);\n    }\n\n}\n\nfunction daysBetween(startDate: Date, endDate: Date): number {\n    let msPerDay = 1000 * 60 * 60 * 24;\n    return (endDate.valueOf() - startDate.valueOf()) / msPerDay;\n}\n\nclass Exclusion {\n    start_date: Date;\n    end_date: Date;\n    role: Role;\n\n    constructor(start: Date, end: Date, because: Role) {\n        this.start_date = start;\n        this.end_date = end;\n        this.role = because;\n        if (this.duration_in_days < 0) {\n            throw Error(\"Cannot have an exclusion zone with a -ve duration\");\n        }\n    }\n\n    overlap_with(other: Exclusion, role: Role) {\n        return this.includes_date(other.start_date) ||\n            this.includes_date(other.end_date) ||\n            other.includes_date(this.start_date) ||\n            other.includes_date(this.end_date);\n    }\n\n    includes_date(date: Date) {\n        return this.start_date <= date && date < this.end_date;\n    }\n\n    get duration_in_days(): number {\n        return daysBetween(this.start_date, this.end_date);\n    }\n\n    valueOf() {\n        return JSON.stringify(this);\n    }\n}\n\n// Score for this person, for some date\nclass ScheduleAtDate {\n    date: Date;\n    people_score: Map<Person, ScheduleScore>;\n\n    constructor(date: Date) {\n        this.date = date;\n        this.people_score = new Map<Person, ScheduleScore>();\n    }\n\n    get date_key(): string {\n        return Unavailablity.dayAndHourForDate(this.date);\n    }\n\n    score_for(p: Person): ScheduleScore {\n        return this.people_score.get(p);\n    }\n\n    get people(): Array<Person> {\n        return Array.from(this.people_score.keys());\n    }\n\n    get people_sorted_by_role_priority(): Array<Person> {\n        let people = this.people;\n        return people.sort((a: Person, b: Person) => {\n            if (a.highest_role_layout_priority > b.highest_role_layout_priority) {\n                return 1;\n            } else if (a.highest_role_layout_priority < b.highest_role_layout_priority) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n\n    add_person(person: Person, role: Role, facts: RuleFacts = null) {\n        if (!this.people_score.get(person)) {\n            this.people_score.set(person, new ScheduleScore(role, facts.decisions_for_date));\n        } else {\n            let score = this.people_score.get(person);\n            score.add_role(role, facts);\n        }\n    }\n\n    people_in_role(role: Role): Array<Person> {\n        return this.people.filter(p => {\n            let score = this.people_score.get(p);\n            return score.roles.filter(r => role.uuid == r.uuid)\n        });\n    }\n\n    valueOf() {\n        let names_with_tasks = this.people_sorted_by_role_priority.map(p => {\n            return p.name + \"=\" + this.people_score.get(p);\n        });\n        return this.date.toDateString() + \" - \" + _.join(names_with_tasks, ',');\n    }\n}\n\n\nexport {\n    Exclusion,\n    ScheduleInput,\n    ScheduleScore,\n    ScheduleAtDate,\n    daysBetween\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/common.ts","import {observable} from \"mobx-angular\";\nimport {Person} from \"./people\";\nimport {Role} from \"./roles\";\n\nexport enum AvailabilityUnit {\n    AVAIL_ANYTIME,\n    EVERY_N_DAYS,\n    EVERY_N_WEEKS,\n}\n\nexport class Availability {\n    period: number;\n    unit: AvailabilityUnit;\n    only_to_role: Role;\n\n    constructor(period: number = 1, unit: AvailabilityUnit = AvailabilityUnit.AVAIL_ANYTIME, only_to_role: Role = null) {\n        this.period = period;\n        this.unit = unit;\n        this.only_to_role = only_to_role;\n    }\n\n    get_end_date_from(date: Date) {\n        let end_date = new Date(date);\n        switch (this.unit) {\n            case AvailabilityUnit.AVAIL_ANYTIME:\n                end_date.setDate(date.getDate() + 1);\n                break;\n\n            case AvailabilityUnit.EVERY_N_DAYS:\n                end_date.setDate(date.getDate() + this.period - 1);\n                break;\n\n            case AvailabilityUnit.EVERY_N_WEEKS:\n                end_date.setDate(date.getDate() + (7 * this.period) - 1);\n                break;\n        }\n        return end_date;\n    }\n\n    every(a_number: number, unit: AvailabilityUnit) {\n        this.period = a_number;\n        this.unit = unit;\n    }\n}\n\nexport class SchedulePrefs {\n    @observable slip_aggressiveness: number;\n    @observable fill_aggresiveness: number;\n    @observable preferred_leader: Person;\n    @observable availability: Availability;\n\n    constructor() {\n        this.slip_aggressiveness = 0;\n        this.fill_aggresiveness = 0;\n        this.availability = new Availability();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/state/scheduling-types.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-people',\n  templateUrl: 'people.html'\n})\nexport class PeoplePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/people/people.ts","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'reasons',\n    templateUrl: 'reasons.html'\n})\nexport class ReasonsComponent {\n    @Input() decisions: Array<string>;\n\n    constructor() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/reasons/reasons.ts","import {action, computed, observable} from \"mobx-angular\";\nimport {Role} from \"./roles\";\nimport {AvailabilityUnit, SchedulePrefs} from \"./scheduling-types\";\nimport ShortUniqueId from 'short-unique-id';\nimport {isUndefined} from \"util\";\nimport {DependentPlacementRule, Rule, WeightedRoles} from \"../scheduling/rule_based/rules\";\nimport * as _ from \"lodash\";\n\nclass Unavailablity {\n    from_date: Date = null;\n    to_date: Date = null;\n\n    constructor(from: Date, to: Date = null) {\n        if (from == null) {\n            throw new Error(\"From date cannot be null\");\n        }\n        this.from_date = from;\n        this.to_date = to;\n    }\n\n    public static dayAndHourForDate(date: Date): string {\n        return date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate() + \"@\" + date.getHours();\n    }\n\n    get is_date_range(): boolean {\n        return this.from_date != null && this.to_date != null;\n    }\n\n    matches_single_date(d: Date) {\n        if (this.to_date != null) {\n            return false;\n        }\n        let thisDate = Unavailablity.dayAndHourForDate(this.from_date);\n        let otherDate = Unavailablity.dayAndHourForDate(d);\n        return thisDate == otherDate;\n    }\n\n    contains_date(date: Date) {\n        let start = this.from_date;\n\n        // By default, be one day in length\n        let the_end_date = new Date(start);\n        the_end_date.setDate(start.getDate() + 1);\n\n        if (this.is_date_range) {\n            the_end_date = this.to_date;\n        }\n        return date >= start && date < the_end_date;\n    }\n}\n\nclass Person {\n    private _name: string;\n\n    @observable uuid: string;\n\n    @computed\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n        // console.log(\"Set name to \" + value);\n    }\n\n    primary_roles: Map<Role, number>;\n    @observable unavailable: Array<Unavailablity>;\n    @observable prefs: SchedulePrefs;\n\n    private placement_rules: Map<Role, Array<Rule>>;\n\n    // Need to store a role, and also for this person, if they are in this role what\n    // other roles they can also fullfill. However; mobx doesn't like using objects as keys\n    // in maps, which is a pain.\n    // secondary_roles: Map<string, Array<Role>>;\n\n    constructor(name: string, uuid: string = null) {\n        if (uuid == null) {\n            let uuid_gen = new ShortUniqueId();\n            uuid = uuid_gen.randomUUID(8);\n        }\n        this._name = name;\n        this.uuid = uuid;\n        this.primary_roles = new Map<Role, number>();\n        this.placement_rules = new Map<Role, Array<Rule>>();\n        this.unavailable = [];\n        this.prefs = new SchedulePrefs();\n    }\n\n    role_rules(): Array<Rule> {\n        let rules = [];\n\n        // TODO: Hmm. Could add unavailability dates as rules?\n        // Have a rule that returns NO roles if the person is unavailable.\n        // Could do that on the Pick as well. Here might be a little cleaner, model wise.\n\n        // Add in weighted role distribution\n        let weighting = new WeightedRoles(this.primary_roles);\n        rules.push(weighting);\n\n        return rules;\n    }\n\n    @computed\n    get roles(): Array<Role> {\n        return Array.from(this.primary_roles.keys());\n    }\n\n    @computed\n    get highest_role_layout_priority(): number {\n        return this.roles.reduce((previousMax, role) => {\n            return Math.max(previousMax, role.layout_priority);\n        }, 0);\n    }\n\n    @action\n    avail_every(a_number: number, unit: AvailabilityUnit): Person {\n        this.prefs.availability.every(a_number, unit);\n        return this;\n    }\n\n    get max_role_layout_priority(): number {\n        return this.roles.reduce((prev, role) => {\n            return Math.max(prev, role.layout_priority);\n        }, 0);\n    }\n\n    @action\n    when_in_role(role: Role, also_put_me_in: Array<Role>): Person {\n        this.add_role(role);\n\n        let existing = this.get_placement_rules(role);\n        existing.push(new DependentPlacementRule(also_put_me_in));\n\n        return this;\n    }\n\n    has_primary_role(role: Role) {\n        let matching_roles = this.roles.filter(r => {\n            return r.uuid == role.uuid;\n        });\n        return matching_roles.length > 0;\n    }\n\n    @action\n    add_role(r: Role, weighting = 1): Person {\n        if (r == null || isUndefined(r)) {\n            throw Error(\"Cannot add a nil or undefined role\");\n        }\n        this.primary_roles.set(r, weighting);\n        return this;\n    }\n\n    @action\n    remove_role(r: Role): Person {\n        this.primary_roles.delete(r);\n        this.placement_rules.delete(r);\n        return this;\n    }\n\n    @action\n    add_unavailable(d: Date) {\n        this.unavailable.push(new Unavailablity(d));\n    }\n\n    add_unavailable_range(from: Date, to: Date) {\n        this.unavailable.push(new Unavailablity(from, to));\n    }\n\n    remove_unavailable(d: Date) {\n        this.unavailable = this.unavailable.filter(ud => {\n            return !ud.matches_single_date(d);\n        });\n    }\n\n    is_unavailable_on(date: Date) {\n        // See if this date is inside the unavailable date ranges\n        for (let unavail of this.unavailable) {\n            if (unavail.contains_date(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // role_including_dependents_of(role: Role): Array<Role> {\n    //     let secondary = this.secondary_roles.get(role.uuid);\n    //     if (secondary) {\n    //         return [\n    //             role,\n    //             ...Array.from(this.secondary_roles.get(role.uuid))\n    //         ]\n    //     }\n    //     return [role];\n    // }\n\n    placement_rules_for_role(role: Role): Array<Rule> {\n        return this.get_placement_rules(role);\n    }\n\n    private get_placement_rules(role: Role) {\n        if(!this.placement_rules.has(role)) {\n            this.placement_rules.set(role, []);\n        }\n        return this.placement_rules.get(role);\n    }\n}\n\nclass PeopleStore {\n    @observable people: Array<Person>;\n\n    constructor() {\n        this.people = [];\n    }\n\n    @action\n    add_person(p: Person): Person {\n        this.people.push(p);\n        return p;\n    }\n\n    @action\n    remove_person(p: Person) {\n        this.people = this.people.filter(per => {\n            return per.uuid != p.uuid\n        });\n    }\n\n    people_with_role(role: Role) {\n        return this.people.filter(person => {\n            for (let person_role of person.roles) {\n                if (role.uuid == person_role.uuid) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n\n    get roles_for_all_people(): Array<Role> {\n        let all_roles = _.flatMap(this.people, (p) => p.roles);\n        return _.uniqBy(all_roles, (r) => r.uuid);\n    }\n\n    order_people_by_role_layout_priority() {\n        return this.people.sort((p1: Person, p2: Person) => {\n            let maxlp1 = p1.max_role_layout_priority;\n            let maxlp2 = p2.max_role_layout_priority;\n            return maxlp1 < maxlp2 ? 1 : maxlp1 > maxlp2 ? -1 : 0;\n        });\n    }\n}\n\n\nexport {\n    Unavailablity,\n    PeopleStore,\n    Person\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/people.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {ErrorHandler, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {IonicApp, IonicErrorHandler, IonicModule} from 'ionic-angular';\nimport {MyApp} from './app.component';\n\nimport {AboutPage} from '../pages/about/about';\nimport {HomePage} from '../pages/home/home';\nimport {TabsPage} from '../pages/tabs/tabs';\nimport {PeoplePage} from \"../pages/people/people\";\n\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {MobxAngularModule} from 'mobx-angular';\nimport {ComponentsModule} from \"../components/components.module\";\nimport {NgPipesModule} from \"angular-pipes\";\nimport {RootStore} from \"../state/root\";\n\n@NgModule({\n    declarations: [\n        MyApp,\n        AboutPage,\n        PeoplePage,\n        HomePage,\n        TabsPage\n    ],\n    imports: [\n        BrowserModule,\n        NgPipesModule,\n        IonicModule.forRoot(MyApp),\n        ComponentsModule,\n        MobxAngularModule,\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n        AboutPage,\n        PeoplePage,\n        HomePage,\n        TabsPage\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        RootStore,\n        {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {observable} from \"mobx-angular\";\nimport {Person} from \"./people\";\nimport {Role} from \"./roles\";\n\nclass UIStore {\n    @observable selected_person: Person;\n    @observable selected_date: Date;\n    @observable selected_role: Role;\n\n    constructor() {\n    }\n\n    get have_selection(): boolean {\n        return this.selected_person != null;\n    }\n}\n\nexport {\n    UIStore\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/UIState.ts","import {\n    defaultAccousticGuitar,\n    defaultBass,\n    defaultComputerRole,\n    defaultDrumsRole,\n    defaultElectricGuitar,\n    defaultKeysRole,\n    defaultLeaderRole,\n    defaultSaxRole,\n    defaultSoundRole,\n    defaultVocalsRole\n} from \"../../state/roles\";\n\nimport {PeopleStore, Person} from \"../../state/people\";\nimport {AvailabilityUnit} from \"../../state/scheduling-types\";\nimport {RootStore} from \"../../state/root\";\nimport {DependentPlacementRule} from \"../../scheduling/rule_based/rules\";\n\nlet neil: Person = new Person(\"Neil Clayton\");\nlet cherilyn: Person = new Person(\"Cherilyn Clayton\");\nlet christine: Person = new Person(\"Christine Edlin\");\nlet stuart: Person = new Person(\"Stuart Cambell\");\nlet jeremy_selfe: Person = new Person(\"Jeremy Selfe\");\n\nlet daniel: Person = new Person(\"Daniel Gibbs\");\nlet ben: Person = new Person(\"Ben Watson\");\nlet courtney: Person = new Person(\"Courtney Anderson\");\nlet robs: Person = new Person(\"Rob Swiney\");\nlet robp: Person = new Person(\"Rob Penhey\");\nlet dave: Person = new Person(\"Dave Humphries\");\nlet ralph: Person = new Person(\"Ralph Lambert\");\nlet anita: Person = new Person(\"Anita Lambert\");\nlet annie: Person = new Person(\"Annie McMullen\");\nlet jo: Person = new Person(\"Jo\");\nlet allie: Person = new Person(\"Allie Pope\");\nlet craig: Person = new Person(\"Craig Campbell\");\n\nlet chris: Person = new Person(\"Chris Evans\");\nlet jeremy_l: Person = new Person(\"Jeremy Legg\");\nlet andre_l: Person = new Person(\"Andre Legg\");\nlet jeremy_w: Person = new Person(\"Jeremy Watson\");\nlet john: Person = new Person(\"John Sutherland\");\n\nchristine.add_unavailable_range(new Date(2018, 3, 0), new Date(2050, 1, 1));\ncraig.add_unavailable(new Date(2018, 0, 0));\n\nexport class TestStoreConstruction {\n    constructor() {\n\n    }\n\n    static SetupStore(root_store: RootStore) {\n        let person_store: PeopleStore = root_store.people_store;\n\n        person_store.add_person(neil)\n            .add_role(defaultSoundRole, 1)\n            .add_role(defaultSaxRole, 3)\n            .avail_every(4, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(cherilyn)\n            .add_role(defaultKeysRole)\n            .when_in_role(defaultLeaderRole, [defaultKeysRole])\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(christine)\n            .when_in_role(defaultLeaderRole, [defaultVocalsRole])\n            .avail_every(4, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(stuart)\n            .add_role(defaultAccousticGuitar)\n            .add_role(defaultVocalsRole)\n            .when_in_role(defaultLeaderRole, [defaultAccousticGuitar, defaultVocalsRole])\n            .avail_every(6, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jeremy_selfe)\n            .add_role(defaultLeaderRole, 2)\n            .add_role(defaultElectricGuitar)\n            .when_in_role(defaultLeaderRole, [defaultElectricGuitar])\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(ralph)\n            .when_in_role(defaultLeaderRole, [defaultAccousticGuitar, defaultVocalsRole])\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n\n        person_store.add_person(daniel)\n            .add_role(defaultDrumsRole, 3)\n            .add_role(defaultBass);\n\n        person_store.add_person(craig)\n            .add_role(defaultDrumsRole)\n            .avail_every(5, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(ben)\n            .add_role(defaultDrumsRole, 1)\n            .add_role(defaultBass, 3)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(courtney)\n            .add_role(defaultVocalsRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(robp)\n            .add_role(defaultBass, 3)\n            .add_role(defaultSoundRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(robs)\n            .add_role(defaultBass)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(dave)\n            .add_role(defaultAccousticGuitar)\n            .add_role(defaultVocalsRole)\n            .when_in_role(defaultAccousticGuitar, [defaultVocalsRole])\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(anita)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(annie)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jo)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(allie)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(chris)\n            .add_role(defaultSoundRole)\n            // .addRole(defaultElectricGuitar)\n            .avail_every(4, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jeremy_l)\n            .add_role(defaultSoundRole)\n            .add_role(defaultComputerRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(andre_l)\n            .add_role(defaultSoundRole)\n            .add_role(defaultElectricGuitar)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jeremy_w)\n            .add_role(defaultSoundRole, 2)\n            .add_role(defaultComputerRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(john)\n            .add_role(defaultSoundRole)\n            .add_role(defaultComputerRole, 2)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/store/test.store.ts","import {NgModule} from '@angular/core';\nimport {ScheduleViewerComponent} from './schedule-viewer/schedule-viewer';\nimport {IonicModule} from \"ionic-angular\";\nimport {NgPipesModule} from \"angular-pipes\";\nimport {PersonEditorComponent} from './person-editor/person-editor';\nimport {ReasonsComponent} from './reasons/reasons';\n\n@NgModule({\n    declarations: [\n        ScheduleViewerComponent,\n        PersonEditorComponent,\n        ReasonsComponent\n    ],\n    imports: [\n        IonicModule,\n        NgPipesModule,\n    ],\n    exports: [\n        ScheduleViewerComponent,\n        PersonEditorComponent,\n        ReasonsComponent\n    ]\n})\nexport class ComponentsModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import {Component, Input} from '@angular/core';\nimport {isArray} from \"util\";\nimport {Person} from \"../../state/people\";\nimport {RootStore} from \"../../state/root\";\nimport {PopoverController} from \"ionic-angular\";\nimport {ReasonsComponent} from \"../reasons/reasons\";\nimport {ScheduleWithRules} from \"../../scheduling/rule_based/scheduler\";\n\n@Component({\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'schedule-viewer',\n    templateUrl: 'schedule-viewer.html'\n})\nexport class ScheduleViewerComponent {\n    @Input() schedule: ScheduleWithRules;\n\n    constructor(private store: RootStore,\n                public popoverCtrl: PopoverController) {\n    }\n\n    get headers(): Array<string> {\n        if (!this.schedule) {\n            return [];\n        }\n        return this.schedule.jsonFields();\n    }\n\n    get rows(): Array<Object> {\n        if (!this.schedule) {\n            return [];\n        }\n        // console.log(JSON.stringify(this.schedule.jsonResult()));\n        return this.schedule.jsonResult();\n    }\n\n    presentPopover(myEvent) {\n        let popover = this.popoverCtrl.create(ReasonsComponent, {\n            // reasons:this.store.ui_store.s\n        });\n        popover.present({\n            ev: myEvent\n        });\n    }\n\n    keys_for_row(row) {\n        let keys = Object.keys(row).filter(v => !v.startsWith('date'));\n        return Array.from(keys);\n    }\n\n    value_as_array(value): any[] {\n        if (isArray(value)) {\n            return value;\n        }\n        return [value];\n    }\n\n    /*\n    Want to paint a rectangle, from the person@slot, to the end of their exclusion zone\n    Every time we place someone, we do create an exclusion that says \"jeremy, excluded 2 wks, due to guitar'\n\n    We can use this.\n    This method is called every cell. We're asking if this cell:\n    a) sits in an exclusion zone, for the selected person\n    b) where that exclusion zone includes the date of the row\n     */\n    in_exclusion_zone(row, role_name): boolean {\n        let person = this.selected_person;\n        if (!person) {\n            return false;\n        }\n        let role = this.store.roles_store.find_role(role_name);\n        if (!role) {\n            return false;\n        }\n\n        let date_for_row = row['date'];\n        return this.schedule.is_person_in_exclusion_zone(person, role, date_for_row);\n    }\n\n    /*\n    Want to mark if:\n    a) The person within this cell == the selected person\n     */\n    selected_and_in_role(a_person: Person, role_name) {\n        if (a_person == null) {\n            console.error(\"a_person is null. This seems bad\");\n            return false;\n        }\n        let person = this.selected_person;\n        if (!person) {\n            return false;\n        }\n        if (a_person.uuid != person.uuid) {\n            return false;\n        }\n        return this.store.roles_store.find_role(role_name);\n\n    }\n\n    select(person: Person, date: Date, role_name: string) {\n        let role = this.store.roles_store.find_role(role_name);\n        console.log(\"Selecting: \" + person + \" on \" + date.toDateString() + \" for \" + role.name);\n        this.store.ui_store.selected_person = person;\n        this.store.ui_store.selected_date = date;\n        this.store.ui_store.selected_role = role;\n    }\n\n    get selected_person(): Person {\n        if (!this.store.ui_store || this.store.ui_store.selected_person == null) {\n            return null;\n        }\n        return this.store.ui_store.selected_person;\n    }\n\n    get hover(): string {\n        if (!this.selected_person) {\n            return \"Nothing\";\n        }\n        return this.selected_person.name;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/schedule-viewer/schedule-viewer.ts","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {Person} from \"../../state/people\";\nimport includes from 'lodash/includes';\nimport {ScheduleWithRules} from \"../../scheduling/rule_based/scheduler\";\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'person-editor',\n    templateUrl: 'person-editor.html'\n})\nexport class PersonEditorComponent {\n    @Input() person: Person;\n    @Input() schedule: ScheduleWithRules;\n\n    constructor() {\n    }\n\n    scheduled_dates() {\n        // Find a list of schedules for this person\n        return Array.from(this.schedule.dates.values()).filter(v => {\n            return includes(v.people, this.person);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/person-editor/person-editor.ts","import {action, observable} from \"mobx-angular\";\nimport ShortUniqueId from 'short-unique-id';\nimport {PeopleStore, Person} from \"./people\";\nimport {OnThisDate, Rule, UsageWeightedSequential} from \"../scheduling/rule_based/rules\";\n\nexport class Role {\n    @observable uuid: string;\n    @observable name: string;\n    @observable maximum_count: number;\n    @observable layout_priority: number;\n\n    constructor(name: string, uuid: string = null, priority = 0) {\n        if (uuid == null) {\n            let uuid_gen = new ShortUniqueId();\n            uuid = uuid_gen.randomUUID(8);\n        }\n        this.uuid = uuid;\n        this.name = name;\n        this.maximum_count = 1;\n        this.layout_priority = priority;\n    }\n\n    valueOf() {\n        return \"[\" + this.name + \"]\";\n    }\n}\n\nlet leaderPriority = 11;\nlet soundPriority = 10; // 10\nlet instrumentPriority = 10;\n\nlet defaultLeaderRole = new Role(\"Worship Leader\", null, leaderPriority);\n\nlet defaultSoundRole = new Role(\"Sound\", null, soundPriority);\nlet defaultComputerRole = new Role(\"Computer\", null, soundPriority);\n\nlet defaultBass = new Role(\"Bass\", null, instrumentPriority);\nlet defaultDrumsRole = new Role(\"Drums\", null, instrumentPriority);\nlet defaultKeysRole = new Role(\"Keys\", null, instrumentPriority);\nlet defaultAccousticGuitar = new Role(\"Guitar (Accoustic)\", null, instrumentPriority);\nlet defaultElectricGuitar = new Role(\"Guitar (Electric)\", null, instrumentPriority);\n\nlet defaultVocalsRole = new Role(\"Vocals\", null, instrumentPriority);\nlet defaultSaxRole = new Role(\"Sax\", null, instrumentPriority);\n\n\ndefaultLeaderRole.maximum_count = 1;\ndefaultSoundRole.maximum_count = 1;\ndefaultComputerRole.maximum_count = 1;\ndefaultKeysRole.maximum_count = 1;\n\ndefaultAccousticGuitar.maximum_count = 2;\n\ndefaultVocalsRole.maximum_count = 3;\n\ndefaultElectricGuitar.maximum_count = 1;\ndefaultBass.maximum_count = 1;\ndefaultDrumsRole.maximum_count = 1;\n\nexport class RolesStore {\n    @observable roles: Array<Role>;\n    @observable rules: Array<Rule>;\n\n    constructor() {\n        this.rules = [];\n        this.roles = [\n            defaultLeaderRole,\n            defaultSoundRole,\n            defaultComputerRole,\n            defaultKeysRole,\n            defaultVocalsRole,\n            defaultDrumsRole,\n            defaultBass,\n            defaultAccousticGuitar,\n            defaultElectricGuitar,\n            defaultSaxRole\n        ];\n    }\n\n    @action\n    removeAllRoles() {\n        this.roles = [];\n    }\n\n    @action\n    addRole(r: Role) {\n        let foundIndex = this.roles.findIndex(role => {\n            return r.uuid == role.uuid;\n        });\n        // console.log(\"Index of \" + r.uuid + \" is \" + foundIndex);\n        if (foundIndex >= 0) {\n            return null;\n        }\n\n        this.roles.push(r);\n        // console.log(\"Added role: \" + JSON.stringify(r));\n        return r;\n    }\n\n    @action\n    addRoles(roles: Array<Role>) {\n        for (let role of roles) {\n            this.addRole(role);\n        }\n    }\n\n    @action\n    removeRole(r: Role) {\n        this.roles = this.roles.filter(role => role.uuid != r.uuid);\n    }\n\n    get roles_in_layout_order_grouped(): Array<Array<Role>> {\n        // Add all roles into a map\n        let roles_in_order = this.roles_in_layout_order;\n        let intermediate = new Map<number, Array<Role>>();\n        for (let role of roles_in_order) {\n            if (!intermediate.has(role.layout_priority)) {\n                intermediate.set(role.layout_priority, []);\n            }\n            intermediate.set(role.layout_priority, [...intermediate.get(role.layout_priority), role]);\n        }\n\n        // Turn into an array\n        let result = [];\n        intermediate.forEach((list, key: number) => {\n            result.push(list);\n        });\n        return result;\n    }\n\n    get roles_in_layout_order(): Array<Role> {\n        return this.roles.sort((a: Role, b: Role) => {\n            if (a.layout_priority < b.layout_priority) {\n                return 1;\n            } else if (a.layout_priority > b.layout_priority) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n\n    find_role(role_name: string) {\n        for (let role of this.roles) {\n            if (role.name.toLowerCase() == role_name.toLowerCase()) {\n                return role;\n            }\n        }\n        return null;\n    }\n\n    pick_rules(people_store: PeopleStore): Map<Role, Array<Rule>> {\n        let rule_map = new Map<Role, Array<Rule>>();\n        for (let role of this.roles_in_layout_order) {\n            let rules = [];\n\n            // Find any specific rules for this date.\n            rules = rules.concat(this.rules_for_role(role));\n\n            // Ordering people sequentially\n            let uws = new UsageWeightedSequential(people_store.people_with_role(role));\n            rules.push(uws);\n\n            rule_map.set(role, rules);\n        }\n        return rule_map;\n    }\n\n    role_rules(people_store: PeopleStore): Map<Person, Array<Rule>> {\n        let rule_map = new Map<Person, Array<Rule>>();\n        for (let person of people_store.people) {\n            rule_map.set(person, person.role_rules());\n        }\n        return rule_map;\n    }\n\n    addPickRule(rule: Rule) {\n        /*\n        When putting rules together, user specified pick rules must come before the\n        UWS rules when executing. So we make sure they have a higher priority.\n        */\n        rule.priority = 10;\n        this.rules.push(rule);\n        // console.log(\"Rules now \" + JSON.stringify(this.rules));\n    }\n\n    private rules_for_role(role: Role) {\n        return this.rules.filter(r => {\n            if (r instanceof OnThisDate) {\n                return r.role.uuid == role.uuid;\n            }\n            return false;\n        });\n    }\n}\n\nexport {\n    defaultLeaderRole,\n    defaultSoundRole,\n    defaultDrumsRole,\n    defaultVocalsRole,\n    defaultComputerRole,\n    defaultKeysRole,\n    defaultAccousticGuitar,\n    defaultElectricGuitar,\n    defaultBass,\n    defaultSaxRole\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/roles.ts"],"sourceRoot":""}