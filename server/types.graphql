# projectId: cjandth3h017p0145cxjvbyef
# version: 42

type File @model {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type User @model {
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
  fullName: String
  unavailability: [Unavailability!]! @relation(name: "UserAvailability")
  email: String @isUnique
  password: String
  schedule: Schedule @relation(name: "ScheduleOnUser")
  scheduledPersons: [ScheduleSlot!]! @relation(name: "ScheduledPersonOnUser")
  organization: Organization @relation(name: "OrganizationOnUser")
  weightedRoles: [WeightedRole!]! @relation(name: "UserOnWeightedRole")
}

type Unavailability @model {
  id: ID! @isUnique
  fromDate: DateTime!
  toDate: DateTime
  user: User @relation(name: "UserAvailability")
}

type Role @model {
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
  name: String!
  priority: Int! @defaultValue(value: 0)
  organization: Organization @relation(name: "OrganizationOnRole")
  scheduledPersons: [ScheduleSlot!]! @relation(name: "ScheduledPersonOnRole")
  weightedRole: WeightedRole @relation(name: "WeightedRoleOnRole")
}

type Schedule @model {
  dates: [ScheduleOnDate!]! @relation(name: "ScheduleOnScheduleOnDate")
  id: ID! @isUnique
  owner: User @relation(name: "ScheduleOnUser")
}

type ScheduleOnDate @model {
  date: DateTime!
  id: ID! @isUnique
  schedule: Schedule @relation(name: "ScheduleOnScheduleOnDate")
  slots: [ScheduleSlot!]! @relation(name: "ScheduledPersonOnScheduleOnDate")
}

type ScheduleSlot @model {
  id: ID! @isUnique
  role: Role @relation(name: "ScheduledPersonOnRole")
  scheduledDate: ScheduleOnDate @relation(name: "ScheduledPersonOnScheduleOnDate")
  user: User @relation(name: "ScheduledPersonOnUser")
  reasons: [Reason!]! @relation(name: "ScheduleSlotOnReason")
}

type Organization @model {
  id: ID! @isUnique
  name: String!
  roles: [Role!]! @relation(name: "OrganizationOnRole")
  users: [User!]! @relation(name: "OrganizationOnUser")
}

type Reason @model {
  depth: Int! @defaultValue(value: 0)
  id: ID! @isUnique
  slot: ScheduleSlot @relation(name: "ScheduleSlotOnReason")
  text: String!
}

type WeightedRole @model {
  id: ID! @isUnique
  role: Role! @relation(name: "WeightedRoleOnRole")
  user: User @relation(name: "UserOnWeightedRole")
  weight: Float! @defaultValue(value: 0.0)
}